---
- name: Install prerequisites from apt
  become: yes
  apt: 
    name: "{{ item }}"
    state: present
  with_items: 
    - libpq-dev
    - python-psycopg2
    - python3-psycopg2  
    - postgresql-client
  when: create_db
  
- name: Create modules db
  postgresql_db:
    login_host: "{{ pg_host }}"
    login_user: "{{ pg_admin_user }}"
    login_password: "{{ pg_admin_password }}"
    name: "{{ module_database }}"
    owner: "{{ pg_admin_user }}"
  when: create_db

- name: Set Okapi environment
  uri:
    url: "{{ okapi_url }}/_/env"
    method: POST
    body_format: json
    headers:
      Accept: application/json, text/plain
    body: "{{ item|to_json }}"
    status_code: 201
  register: set_okapi_env
  changed_when: set_okapi_env.status == 201
  with_items: "{{ module_env }}"

- name: Post deployment descriptors for remote modules
  include_tasks: okapi-discovery.yml
  when: item.url is defined
  with_items: "{{ folio_modules }}"

- name: Create dict for install object
  set_fact:
    install_obj:
      action: enable

- name: Build install list for modules with deployment
  set_fact:
    install_deploy: "{{ install_deploy|default([]) + [ install_obj|combine({'id': item.name + '-' + item.version}) ] if item.version is defined else install_deploy|default([]) + [ install_obj|combine({'id': item.name}) ] }}"
  when: item.url is not defined and item.deploy is defined and item.deploy is sameas true
  with_items: "{{ folio_modules }}"

- name: Build install list for modules without deployment
  set_fact:
    install: "{{ install|default([]) + [ install_obj|combine({'id': item.name + '-' + item.version}) ] if item.version is defined else install|default([]) + [ install_obj|combine({'id': item.name}) ] }}"
  when: item.url is defined or item.deploy is not defined or item.deploy is sameas false
  with_items: "{{ folio_modules }}"

- name: Post install list for deployment and enabling
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/{{ tenant }}/install?deploy=true"
    method: POST
    body_format: json
    headers:
      Accept: application/json, text/plain
    body: "{{ install_deploy }}"
    timeout: "{{ deploy_timeout }}"
  register: deploy_request
  changed_when: deploy_request.status == 200
  when: install_deploy|default(false)

- name: Post install list for enabling modules (no deployment)
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/{{ tenant }}/install"
    method: POST
    body_format: json
    headers:
      Accept: application/json, text/plain
    body: "{{ install }}"
  register: install_request
  changed_when: install_request.status == 200
  when: install|default(false)
